<project name="FitLibraryWeb" default="jar" basedir=".">
	<property name="home" value="${basedir}" />
	<property name="lib" value="${home}/fitnesse/lib" />
	<property name="src" value="${home}/src" />
	<property name="bin" value="${home}/bin" />
	<property name="test.src" value="${home}/test" />
	<property name="fitnesse.dir" value="${home}/fitnesse" />
	<property name="port" value="8990" />
	<property name="batch-run-retries" value="0" />
	<!-- batch runner properties -->
	<property name="showpassesinreport" value="false" />	
	<property name="results-dir" value="${home}/runnerResults" />
	<property name="timeout" value="1200000" /> <!-- 10 mins default timeout -->
	<!-- release properties -->
	<property name="releases.dir" value="${home}/release" />
        <tstamp prefix="start"/>
	<property name="release.now.dir" value="${releases.dir}/FitLibraryWeb" />
	<property name="release.zip.file" value="${releases.dir}/FitLibraryWeb.zip" />
	<!-- release checking properties -->
	<property name="release.copy" value="${releases.dir}/FL_Temp" />
	<property name="release.fitnesse-copy" value="${release.copy}/FitNesseCopy" />
	<property name="release.unzip" value="${release.copy}/Unzip" />
	<property name="release.testResults" value="${release.copy}/TestResults" />
	<property name="fitlibrary.dir" value="../fitlibrary" />
	<!-- final release properties -->
	<property name="release.version" value="${start.DSTAMP}" />
	<property name="final.release.dir" value="${releases.dir}" />
	<property name="final.release.zip" value="${final.release.dir}/FitLibraryWeb${release.version}.zip" />

	<target name="final-release">
		<move file="${release.zip.file}"
		      tofile="${final.release.zip}"/>
	</target>

	<target name="release-check" depends="fresh-fitnesse, combine-release">
		<batch-run-non-spider-macro runDirectory="${release.fitnesse-copy}" resultsDirectory="${release.testResults}" />
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithHtmlUnit" runDirectory="${release.fitnesse-copy}" resultsDirectory="${release.testResults}" />
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithFirefox" runDirectory="${release.fitnesse-copy}" resultsDirectory="${release.testResults}" />
	</target>

	<target name="combine-release">
		<mkdir dir="${release.fitnesse-copy}/lib" />
		<mkdir dir="${release.unzip}" />
		<unzip src="${release.zip.file}" dest="${release.unzip}"/>
		<copy todir="${release.fitnesse-copy}">
			<fileset dir="${fitlibrary.dir}/fitnesse">
				<include name="fitlibrary.jar" />
				<include name="*.properties" />
			</fileset>
		</copy>
		<move todir="${release.fitnesse-copy}/lib">
			<fileset dir="${release.unzip}/fitnesse/lib">
				<include name="*.jar" />
			</fileset>
		</move>
		<move todir="${release.fitnesse-copy}/FitNesseRoot/files">
			<fileset dir="${release.unzip}/fitnesse/FitNesseRoot/files"/>
		</move>
		<move todir="${release.fitnesse-copy}/FitNesseRoot/FitLibraryWeb">
			<fileset dir="${release.unzip}/fitnesse/FitNesseRoot/FitLibraryWeb" />
		</move>
		<copy todir="${release.copy}/folderRunner">
			<fileset dir="${release.unzip}/folderRunner" />
		</copy>
		<delete dir="${release.unzip}" />
	</target>

	<target name="fresh-fitnesse">
		<delete dir="${release.copy}"/>
		<mkdir dir="${release.fitnesse-copy}"/>
		<copy todir="${release.fitnesse-copy}">
			<fileset file="fitnesse/fitnesse.jar" />
		</copy>
		<java jar="${release.fitnesse-copy}/fitnesse.jar" dir="${release.fitnesse-copy}" fork="true">
			<arg value="-i" />
		</java>
	</target>

	<target name="create-release-zip">
		<echo message="Creating release at ${release.now.dir}" />
		<mkdir dir="${releases.dir}" />
		<delete file="${release.zip.file}"/>
		<delete dir="${release.now.dir}" />
		<mkdir dir="${release.now.dir}" />
		<copy todir="${release.now.dir}">
			<fileset file="build.xml" />
			<fileset file="releaseWebREAD-ME.html" />
		</copy>
		<copy todir="${release.now.dir}/fitnesse/lib">
			<fileset dir="fitnesse/lib">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${release.now.dir}/fitnesse/lib/src">
			<fileset dir="fitnesse/lib/src">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy todir="${release.now.dir}/fitnesse/FitNesseRoot/files">
			<fileset dir="fitnesse/FitNesseRoot/files">
				<include name="mootools-1.2.3-core-nc.js" />
				<include name="*.html" />
                        </fileset>
		</copy>
		<copy todir="${release.now.dir}/fitnesse/FitNesseRoot/files/pdf">
			<fileset dir="fitnesse/FitNesseRoot/files/pdf" />
		</copy>
		<copy todir="${release.now.dir}/fitnesse/FitNesseRoot/files/soap">
			<fileset dir="fitnesse/FitNesseRoot/files/soap" />
		</copy>
		<copy todir="${release.now.dir}/fitnesse/FitNesseRoot/FitLibraryWeb">
			<fileset dir="fitnesse/FitNesseRoot/FitLibraryWeb" />
		</copy>

		<copy todir="${release.now.dir}/folderRunner">
			<fileset dir="folderRunner" />
		</copy>
		<zip basedir="${release.now.dir}" destfile="${release.zip.file}"/>
		<delete dir="${release.now.dir}"/>
	</target>

	<target name="jar" depends="clean, compile, junit, jar-no-test" description="Create fitlibraryWeb jar"/>

	<target name="jar-no-test" depends="clean, compile">
		<echo message="Create FitLibraryWeb jar file in local FitNesse" />
		<jar destfile="${lib}/fitlibraryWeb.jar" basedir="bin" />
		<echo message="Create source zip file" />
		<zip destfile="${lib}/src/fitlibraryWebSrc.zip">
			<fileset dir="src" />
		</zip>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
	</target>

	<target name="compile">
		<mkdir dir="${bin}" />

		<javac srcdir="${src}" destdir="${bin}">
			<classpath>
				<fileset dir="${fitnesse.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
		<javac srcdir="${test.src}" destdir="${bin}">

			<classpath>
				<fileset dir="${fitnesse.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>

			</classpath>
		</javac>
	</target>

	<target name="junit" description="run the junit tests">
		<junit fork="yes" dir="${home}" showoutput="yes" printsummary="false" outputtoformatters="true">
			<formatter type="brief" useFile="false" />
			<classpath>
				<dirset dir="${bin}">
					<include name="**" />

				</dirset>
				<pathelement location="${fitnesse.dir}/fitnesse.jar" />
				<pathelement location="${fitnesse.dir}/fitlibrary.jar" />
				<fileset dir="${lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
			<formatter type="xml" if="output-junit-to-xml"/>
			<batchtest fork="yes" haltonfailure="yes" haltonerror="yes" filtertrace="no">
				<fileset dir="${test.src}">
					<include name="**/Test*.java" />
				</fileset>

			</batchtest>
		</junit>
	</target>

	<target name="start-fitnesse">
		<java jar="fitnesse.jar" dir="${fitnesse.dir}" fork="true" spawn="true">
			<arg value="-r" />
			<arg value="FitNesseRoot" />
			<arg value="-p" />
			<arg value="${port}" />
			<arg value="-e" />
			<arg value="0" />

			<jvmarg value="-Xms128m" />
			<jvmarg value="-Xmx256m" />
		</java>
		<echo message="Waiting for FitNesse to start on port ${port}" />
		<waitfor maxwait="30" maxwaitunit="second" checkevery="100" timeoutproperty="fitness.failed">
			<http url="http://localhost:${port}" />
		</waitfor>
		<fail if="fitness.failed">FitNesse failed to start...</fail>

	</target>

	<target name="stop-fitnesse">
		<java classname="fitnesse.Shutdown" fork="true">
			<classpath>
				<fileset dir=".">
					<include name="fitnesse.jar" />
				</fileset>
			</classpath>

			<arg value="-h" />
			<arg value="localhost" />
			<arg value="-p" />
			<arg value="${port}" />
		</java>
	</target>

	<target name="batch-run-specifications">
		<batch-run-non-spider-macro />
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithHtmlUnit" />
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithFirefox" />
	</target>

	<target name="batch-run-spider-specifications-htmlunit">
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithHtmlUnit" />
	</target>
	
	<target name="batch-run-spider-specifications-firefox">
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithFirefox" />
	</target>
	
	<target name="batch-run-all">
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithHtmlUnit" />
		<batch-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture.SpiderWithFirefox" />
		<batch-run suite="FitLibraryWeb.XmlProcessing" />
		<batch-run suite="FitLibraryWeb.WebServicesClient.SpecifiCations" />
		<batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.PlainTextServices" />
		<batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.Soap11Mocking" />
		<batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.Soap12Mocking" />
		<batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.FullSoapMocking" />
		<batch-run suite="FitLibraryWeb.HttpClient.SpecifiCations" />
		<batch-run suite="FitLibraryWeb.ShellFixture" />
		<batch-run suite="FitLibraryWeb.TemplateFixture" />
		<batch-run suite="FitLibraryWeb.CreateDate" />
		<batch-run suite="FitLibraryWeb.PdfDocument" />
	</target>

	<target name="batch-run-non-spider">
		<batch-run-non-spider-macro />
	</target>
	
	<macrodef name="batch-run-non-spider-macro">
		<attribute name="runDirectory" default="${fitnesse.dir}"/>
		<attribute name="resultsDirectory" default="${results-dir}"/>
		<sequential>
		   <batch-run suite="FitLibraryWeb.XmlProcessing" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.WebServicesClient.SpecifiCations" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.PlainTextServices" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.Soap11Mocking" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.Soap12Mocking" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.MockWebServices.SpecifiCations.FullSoapMocking" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.HttpClient.SpecifiCations" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.ShellFixture" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.TemplateFixture" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.CreateDate" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		   <batch-run suite="FitLibraryWeb.PdfDocument" runDirectory="@{runDirectory}" resultsDirectory="@{resultsDirectory}" />
		</sequential>
	</macrodef>


	<target name="restful-run-spider-specifications">
		<restful-run suite="FitLibraryWeb.SpiderFixture.SpecifySpiderFixture" />
	</target>

	<target name="delete-batch-runner-results-dir">
		<delete dir="${results-dir}"/>
	</target>
	
	<macrodef name="restful-run">
		<attribute name="suite" />
		<sequential>
			<java jar="${lib}/fitnesse.jar" dir="${fitnesse.dir}" failonerror="true" fork="true">
				<arg value="-c" />
				<arg value="@{suite}?suite&amp;format=text" />
				<arg value="-p" />
				<arg value="${port}" />
			</java>
		</sequential>
	</macrodef>

	<macrodef name="batch-run">
		<attribute name="suite" />
		<attribute name="timeout" default="1800000" /> <!-- 20 mins default timeout -->
		<attribute name="runDirectory" default="${fitnesse.dir}"/> <!-- 10 mins default timeout -->
		<attribute name="resultsDirectory" default="${results-dir}"/> <!-- 10 mins default timeout -->
		<sequential>
			<echo message="Batch run of @{suite} with fitnesse at @{runDirectory} and results at @{resultsDirectory}" />
			<java classname="fitlibrary.batch.FitLibraryRunner" fork="true" dir="@{runDirectory}"
			      timeout="@{timeout}" failonerror="true">
				<arg value="-suiteName"/>     <arg value="@{suite}" />
				<arg value="-fitNesseDiry"/>  <arg value="." />
				<arg value="-resultsDiry"/>   <arg value="@{resultsDirectory}" />
				<arg value="-showPasses"/>    <arg value="${showpassesinreport}" />
				<arg value="-port"/>          <arg value="${port}" />
				<arg value="-retries"/>       <arg value="${batch-run-retries}" />

				<classpath>
					<pathelement location="${fitnesse.dir}/fitnesse.jar" />
					<pathelement location="${fitnesse.dir}/fitlibrary.jar" />
					<fileset dir="${lib}">
						<include name="**/*.jar" />
					</fileset>
				</classpath>
			</java>
		</sequential>
	</macrodef>
</project>